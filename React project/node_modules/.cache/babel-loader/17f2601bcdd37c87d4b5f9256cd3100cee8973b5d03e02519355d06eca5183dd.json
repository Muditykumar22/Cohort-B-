{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Cohart B\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case 'TOGGLE_THEME':\n      return {\n        ...state,\n        isDark: !state.isDark\n      };\n    case 'SET_THEME':\n      return {\n        ...state,\n        isDark: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [storedTheme, setStoredTheme] = useLocalStorage('theme', false);\n  const [state, dispatch] = useReducer(themeReducer, {\n    isDark: storedTheme\n  });\n  useEffect(() => {\n    setStoredTheme(state.isDark);\n    document.body.className = state.isDark ? 'dark-theme' : 'light-theme';\n  }, [state.isDark, setStoredTheme]);\n  const toggleTheme = () => {\n    dispatch({\n      type: 'TOGGLE_THEME'\n    });\n  };\n  const setTheme = isDark => {\n    dispatch({\n      type: 'SET_THEME',\n      payload: isDark\n    });\n  };\n  const value = {\n    ...state,\n    toggleTheme,\n    setTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"Vbtd9N2wvuBFSEpJN9NX51kiXH0=\", false, function () {\n  return [useLocalStorage];\n});\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useLocalStorage","jsxDEV","_jsxDEV","ThemeContext","themeReducer","state","action","type","isDark","payload","ThemeProvider","children","_s","storedTheme","setStoredTheme","dispatch","document","body","className","toggleTheme","setTheme","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Cohart B/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { useLocalStorage } from '../hooks/useLocalStorage';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nconst themeReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'TOGGLE_THEME':\r\n      return { ...state, isDark: !state.isDark };\r\n    case 'SET_THEME':\r\n      return { ...state, isDark: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [storedTheme, setStoredTheme] = useLocalStorage('theme', false);\r\n  const [state, dispatch] = useReducer(themeReducer, {\r\n    isDark: storedTheme\r\n  });\r\n\r\n  useEffect(() => {\r\n    setStoredTheme(state.isDark);\r\n    document.body.className = state.isDark ? 'dark-theme' : 'light-theme';\r\n  }, [state.isDark, setStoredTheme]);\r\n\r\n  const toggleTheme = () => {\r\n    dispatch({ type: 'TOGGLE_THEME' });\r\n  };\r\n\r\n  const setTheme = (isDark) => {\r\n    dispatch({ type: 'SET_THEME', payload: isDark });\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    toggleTheme,\r\n    setTheme\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC/E,SAASC,eAAe,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AAEpC,MAAMQ,YAAY,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACtC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MACjB,OAAO;QAAE,GAAGF,KAAK;QAAEG,MAAM,EAAE,CAACH,KAAK,CAACG;MAAO,CAAC;IAC5C,KAAK,WAAW;MACd,OAAO;QAAE,GAAGH,KAAK;QAAEG,MAAM,EAAEF,MAAM,CAACG;MAAQ,CAAC;IAC7C;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMK,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,eAAe,CAAC,OAAO,EAAE,KAAK,CAAC;EACrE,MAAM,CAACK,KAAK,EAAEU,QAAQ,CAAC,GAAGjB,UAAU,CAACM,YAAY,EAAE;IACjDI,MAAM,EAAEK;EACV,CAAC,CAAC;EAEFd,SAAS,CAAC,MAAM;IACde,cAAc,CAACT,KAAK,CAACG,MAAM,CAAC;IAC5BQ,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGb,KAAK,CAACG,MAAM,GAAG,YAAY,GAAG,aAAa;EACvE,CAAC,EAAE,CAACH,KAAK,CAACG,MAAM,EAAEM,cAAc,CAAC,CAAC;EAElC,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBJ,QAAQ,CAAC;MAAER,IAAI,EAAE;IAAe,CAAC,CAAC;EACpC,CAAC;EAED,MAAMa,QAAQ,GAAIZ,MAAM,IAAK;IAC3BO,QAAQ,CAAC;MAAER,IAAI,EAAE,WAAW;MAAEE,OAAO,EAAED;IAAO,CAAC,CAAC;EAClD,CAAC;EAED,MAAMa,KAAK,GAAG;IACZ,GAAGhB,KAAK;IACRc,WAAW;IACXC;EACF,CAAC;EAED,oBACElB,OAAA,CAACC,YAAY,CAACmB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAV,QAAA,EACjCA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACd,EAAA,CA9BWF,aAAa;EAAA,QACcV,eAAe;AAAA;AAAA2B,EAAA,GAD1CjB,aAAa;AAgC1B,OAAO,MAAMkB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGjC,UAAU,CAACM,YAAY,CAAC;EACxC,IAAI,CAAC2B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}