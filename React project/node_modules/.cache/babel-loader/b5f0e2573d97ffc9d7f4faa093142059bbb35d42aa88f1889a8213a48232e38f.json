{"ast":null,"code":"export const taskReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TASK':\n      return {\n        ...state,\n        tasks: [...state.tasks, {\n          ...action.payload,\n          id: Date.now()\n        }]\n      };\n    case 'UPDATE_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task.id === action.payload.id ? {\n          ...task,\n          ...action.payload\n        } : task)\n      };\n    case 'DELETE_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.filter(task => task.id !== action.payload)\n      };\n    case 'TOGGLE_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task.id === action.payload ? {\n          ...task,\n          completed: !task.completed\n        } : task)\n      };\n    case 'SET_TASKS':\n      return {\n        ...state,\n        tasks: action.payload\n      };\n    case 'SET_FILTER':\n      return {\n        ...state,\n        filter: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const initialTaskState = {\n  tasks: [],\n  filter: 'all' // 'all', 'active', 'completed'\n};","map":{"version":3,"names":["taskReducer","state","action","type","tasks","payload","id","Date","now","map","task","filter","completed","initialTaskState"],"sources":["C:/Users/HP/Desktop/Cohart B/src/reducers/taskReducer.js"],"sourcesContent":["export const taskReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TASK':\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks, { ...action.payload, id: Date.now() }]\r\n      };\r\n    \r\n    case 'UPDATE_TASK':\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map(task =>\r\n          task.id === action.payload.id ? { ...task, ...action.payload } : task\r\n        )\r\n      };\r\n    \r\n    case 'DELETE_TASK':\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter(task => task.id !== action.payload)\r\n      };\r\n    \r\n    case 'TOGGLE_TASK':\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map(task =>\r\n          task.id === action.payload\r\n            ? { ...task, completed: !task.completed }\r\n            : task\r\n        )\r\n      };\r\n    \r\n    case 'SET_TASKS':\r\n      return {\r\n        ...state,\r\n        tasks: action.payload\r\n      };\r\n    \r\n    case 'SET_FILTER':\r\n      return {\r\n        ...state,\r\n        filter: action.payload\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initialTaskState = {\r\n  tasks: [],\r\n  filter: 'all' // 'all', 'active', 'completed'\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC5C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,OAAO;QACL,GAAGF,KAAK;QACRG,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAK,EAAE;UAAE,GAAGF,MAAM,CAACG,OAAO;UAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;QAAE,CAAC;MAC/D,CAAC;IAEH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGP,KAAK;QACRG,KAAK,EAAEH,KAAK,CAACG,KAAK,CAACK,GAAG,CAACC,IAAI,IACzBA,IAAI,CAACJ,EAAE,KAAKJ,MAAM,CAACG,OAAO,CAACC,EAAE,GAAG;UAAE,GAAGI,IAAI;UAAE,GAAGR,MAAM,CAACG;QAAQ,CAAC,GAAGK,IACnE;MACF,CAAC;IAEH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGT,KAAK;QACRG,KAAK,EAAEH,KAAK,CAACG,KAAK,CAACO,MAAM,CAACD,IAAI,IAAIA,IAAI,CAACJ,EAAE,KAAKJ,MAAM,CAACG,OAAO;MAC9D,CAAC;IAEH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGJ,KAAK;QACRG,KAAK,EAAEH,KAAK,CAACG,KAAK,CAACK,GAAG,CAACC,IAAI,IACzBA,IAAI,CAACJ,EAAE,KAAKJ,MAAM,CAACG,OAAO,GACtB;UAAE,GAAGK,IAAI;UAAEE,SAAS,EAAE,CAACF,IAAI,CAACE;QAAU,CAAC,GACvCF,IACN;MACF,CAAC;IAEH,KAAK,WAAW;MACd,OAAO;QACL,GAAGT,KAAK;QACRG,KAAK,EAAEF,MAAM,CAACG;MAChB,CAAC;IAEH,KAAK,YAAY;MACf,OAAO;QACL,GAAGJ,KAAK;QACRU,MAAM,EAAET,MAAM,CAACG;MACjB,CAAC;IAEH;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMY,gBAAgB,GAAG;EAC9BT,KAAK,EAAE,EAAE;EACTO,MAAM,EAAE,KAAK,CAAC;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}